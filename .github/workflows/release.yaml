---
name: Release

on:
  push:
    branches:
      - main

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: create release
        env:
          GITHUB_TOKEN: ${{ .secrets.GITHUB_TOKEN }}
        run: |
          previous_tag="$(gh release list --limit 1 | awk '{ print $1 }')"
          previous_major="${previous_tag%%\.*}"
          previous_minor="${previous_tag#*.}"
          previous_minor="${previous_minor%.*}"
          previous_patch="${previous_tag##*.}"
          # Determine next release tag
          next_major_minor="$(date +'%Y').$(date +'%-m')"
          if [[ "${previous_major}.${previous_minor}" == "${next_major_minor}" ]]; then
              echo "Month release already exists for year, incrementing patch number by 1"
              next_patch="$((previous_patch + 1))"
          else
              echo "Month release does not exist for year, setting patch number to 0"
              next_patch="0"
          fi

          release_tag="${next_major_minor}.${next_patch}"
          gh release create "${release_tag}" \
              --repo="${GITHUB_REPOSITORY}" \
              --title="${release_tag}" \
              --generate-notes

  deploy-docs:
    name: Deploy Docs
    needs: create-release
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install dependencies
        run: npm install --prefix docs
      - name: Build website
        run: npm run build --prefix docs
      - name: Upload Build Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
