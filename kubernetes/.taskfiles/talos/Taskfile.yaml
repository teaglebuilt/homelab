---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

x-vars: &vars
  CLUSTER_DIR: "{{.CLUSTER_DIR}}"
  CONTROLLER:
    sh: talosctl config info --output json | jq --raw-output '.endpoints[]' | shuf -n 1

env:
  TALOSCONFIG: "./generated/talosconfig"

tasks:
  info:
    cmds:
      - talosctl --talosconfig=./generated/talosconfig config info

  dashboard:
    desc: Open Talos dashboard
    cmds:
      - talosctl dashboard -n {{.NODE}}

  -*:
    desc: use `-` before command to execute. Examples, [-proceses, -pcap, -netstat]
    vars:
      COMMAND: '{{index .MATCH 0}}'
    cmds:
      - talosctl {{.COMMAND}} -n {{.NODE}}

  read-*:
    vars:
      FILE: '{{index .MATCH 0}}'
    cmds:
      - talosctl read {{.FILE}}

  watch-logs:
    cmds:
      - talosctl dmesg --follow -n {{.NODE}}

  tail-logs:
    cmds:
      - talosctl dmesg --follow --tail -n {{.NODE}}

  machineconfig:
    cmds:
      - talosctl get machineconfig -n {{.NODE}} -o yaml

  fetch-kubeconfig:
    desc: Fetch kubeconfig from Talos controllers
    dir: "{{.CLUSTER_DIR}}"
    cmds:
      - talosctl --talosconfig ./generated/talosconfig kubeconfig ./generated

  reset-cluster:
    desc: Reset all the Talos nodes
    prompt: Reset Talos nodes ... continue?
    dir: "{{.CLUSTER_DIR}}"
    cmds:
      - talosctl reset --nodes $(talosctl config info --output json | jq -r '[.nodes[]] | join(",")') --system-labels-to-wipe STATE --system-labels-to-wipe EPHEMERAL
    preconditions:
      - test -f generated/talosconfig
      - talosctl config info >/dev/null 2>&1
      # - talosctl --nodes {{.NODES}} get machineconfig >/dev/null 2>&1

  reboot-node:
    desc: Reboot a node
    dir: "{{.CLUSTER_DIR}}"
    cmds:
      - talosctl reboot --nodes {{.NODE}}
