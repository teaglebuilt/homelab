# Copyright Envoy AI Gateway Authors
# SPDX-License-Identifier: Apache-2.0
# The full text of the Apache license is available in the LICENSE file at
# the root of the repo.

# Default values for ai-gateway-helm.

extProc:
  repository: docker.io/envoyproxy/ai-gateway-extproc
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  # One of "info", "debug", "trace", "warn", "error", "fatal", "panic".
  logLevel: info

controller:
  logLevel: info
  nameOverride: ""
  fullnameOverride: "ai-gateway-controller"

  # -- Service Account --
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  # Enable leader election mechanism for protecting against split brain if multiple operator pods/replicas are started.
  leaderElection:
    enabled: true

  # -- Deployment configs --
  image:
    repository: docker.io/envoyproxy/ai-gateway-controller
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  replicaCount: 1
  imagePullSecrets: []
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  # Example of a podEnv
  # AWS STS request when rotating OIDC credentials will be configured to use AI_GATEWAY_STS_PROXY_URL proxy if set.
  #  - key: AI_GATEWAY_STS_PROXY_URL
  #    value: some-proxy-placeholder
  # Azure authentication request will be configured to use AI_GATEWAY_AZURE_PROXY_URL proxy if set.
  #  - key: AI_GATEWAY_AZURE_PROXY_URL
  #    value: some-proxy-placeholder
  podEnv: {}
  # Example of volumes
  #  - mountPath: /placeholder/path
  #    name: volume-name
  #    subPath: placeholder-sub-path
  #    configmap:
  #      defaultMode: placeholder
  #      name: configmap-name
  volumes: []
  service:
    type: ClusterIP
    ports:
      - name: grpc
        protocol: TCP
        port: 1063
        appProtocol: grpc
        targetPort: 1063
      - name: http-metrics
        protocol: TCP
        appProtocol: http
        port: 9090
        targetPort: 9090

  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
